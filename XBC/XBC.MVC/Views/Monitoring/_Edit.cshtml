@model XBC.ViewModel.MonitoringViewModel


@using (Html.BeginForm("Edit", "Monitoring", FormMethod.Post, new { id = "form-mtr-edit", name = "form-mtr-edit" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.biodata_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.biodata_id, (IEnumerable<SelectListItem>)ViewBag.BiodataList, "Select Name", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.biodata_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.placement_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.placement_date, new { htmlAttributes = new { @class = "form-control placementDate" } })
            @Html.ValidationMessageFor(model => model.placement_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idle_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.idle_date, new { htmlAttributes = new { @class = "form-control editIdle" } })
            @Html.ValidationMessageFor(model => model.idle_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.last_project, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.last_project, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.last_project, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idle_reason, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.idle_reason, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.idle_reason, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group text-right">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
            <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
        </div>
    </div>

</div>
}


@*@Scripts.Render("~/bundles/jqueryval")*@

<script type="text/javascript">

    $(function () {
        var placement_date = $(".placementDate").val()
        var placement_date_parse = Date.parse($(".placementDate").val());


        //  check placement date is Null ?
        if (Number.isNaN(placement_date_parse)) {
            $(".editIdle").datepicker({
                changeMonth: true,
                changeYear: true
            });
        }
        else {
            $(".editIdle").datepicker({
                changeMonth: true,
                changeYear: true,
                maxDate: placement_date,
                dateFormat: 'dd-M-yy',
                controlType: 'select',
            });
        }
    });

    $("#form-mtr-edit").submit(function () {
        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            success: function (result) {
                if (result.success) {
                    alert("Update Successful!");
                    $(".modal").modal("hide");
                    GetListMonitoring();
                }
                else {
                    alert("Error!" + result.message);
                }
            }
        });
        return false;
    });

</script>