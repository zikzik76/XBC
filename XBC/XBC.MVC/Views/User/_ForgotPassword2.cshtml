@model XBC.ViewModel.UserViewModel
@{
    ViewBag.Title = "ForgotPassword";
    ViewBag.Task = "Reset Password";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group has-feedback">
        @Html.TextBoxFor(m => m.username, new { @class = "form-control ", @placeholder = "Username" })
        <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
        @Html.ValidationMessageFor(m => m.username, "", new { @class = "text-danger" })
    </div>
    <div class="form-group has-feedback">
        @Html.EditorFor(m => m.password, new { @class = "form-control", @placeholder = "New Password", @type = "password" })
        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
        @Html.ValidationMessageFor(m => m.password, "", new { @class = "text-danger" })
    </div>
    <div class="form-group has-feedback">
        @Html.EditorFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Retype New Password", @type="password" })
        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
        @Html.ValidationMessageFor(m => m.password, "", new { @class = "text-danger" })
    </div>
    <div class="row">
        <div class="col-xs-6">
            <button type="submit" class="btn btn-primary btn-block btn-flat">Reset Password</button>
        </div>
    </div>


    @* Enable this once you have account confirmation enabled for password reset functionality
        <p>
            @Html.ActionLink("Forgot your password?", "ForgotPassword")
        </p>*@
}
