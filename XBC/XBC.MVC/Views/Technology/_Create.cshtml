@model XBC.ViewModel.TechnologyViewModel
@using trainers = XBC.ViewModel.TrainerViewModel


@using (Html.BeginForm("Create", "Technology", FormMethod.Post, new { id = "form-create", name = "form-create" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <br>
        <div class="row">
            <div class="col-md-7 text-right">
                <button id="btn-add-trainer" type="button" class="btn-warning btn-md">
                    @*<span class="glyphicon glyphicon-plus"></span>*@
                    <b>Add Trainer</b>
                </button>
            </div>
        </div>

        <div class="panel panel-warning">
            <div id="tech-trainer-list1">
                List Trainer disini
            </div>
        </div>
        <div class="form-group text-right">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                <input type="button" value="Cancel" class="btn btn-default" data-dismiss="modal" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        GetList();
    });

    function GetList() {
        $.ajax({
            url: '@Url.Action("Detail","Technology")',
            type: 'get',
            data: { search: $("#txt").val() },
            success: function (result) {
                $("#tech-trainer-list1").html(result);
            },
            error: function (err) {
                $("#tech-trainer-list1").html(err);
            }
        });
    }
    $("#form-create").submit(function () {
        var tList = [];
        $(this).find("#tech-trainer-list").find("tr").each(function () {
            var list = { id: $(this).find("input[name=id]").val(), trainers: $(this).find("input[name=name]").val() }
            tList.push(list);
        });
        var data = { name: $(this).find("#name").val(), notes: $(this).find("#notes").val(), trainers: tList };
        //alert(JSON.stringify(data));

        $.ajax({
            url: this.action,
            type: this.method,
            data: { model: data },
            success: function (result) {
                if (result.success) {
                    alert("Data successfully created! Name : " + result.entity.name);
                    $(".modal").modal("hide");
                    location.reload();
                } else {
                    alert("Error!." + result.message)
                }
            }
        });
        return false;
    });
    $("#btn-add-trainer").click(function () {
        $.ajax({
            url: '@Url.Action("Trainer", "Technology")',
            type: 'get',
            success: function (result) {
                $("#modal2 .modal-title").html("Add Trainer");
                $("#modal2 .modal-body").html(result);
                $("#modal2").modal("show");
            }
        });
    });
</script>